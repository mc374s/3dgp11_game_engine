//******************************************************************************
//
//
//		2D画像データ
//
//
//******************************************************************************

// インクルード
#include "game.h"

#include "sprite_data.h"

// ラベル定義
enum TEX_NO {
	TEX_WHITE,
	TEX_TITLE,
	TEX_MAIN,
	TEX_PLAYER,

	TEX_PAGE_LEFT,
	TEX_PAGE_RIGHT,
	TEX_COVER_FRONT,
	TEX_COVER_BACK,

	TEX_MAP_OBJECT,
	TEX_IVY_THICK,
	TEX_IVY_THIN,

	TEX_SMOKE,
	TEX_LIFE_STAMP,
	TEX_LARGE_PLAYER,

	TEX_NUMBERS,

	TEX_PAUSE_PANEL,
	TEX_PAUSE_SELECTED,

	TEX_ANIME_STAMP,

	TEX_GAGE_DIVISION_ALLOCATION,
	TEX_GAGE_DIVISION,
	TEX_GAGE,
	TEX_PLAYER_FACE,

	TEX_EFF_DISAPPEAR,
	TEX_EFF_JUMP,
	TEX_EFF_MAKE_TRANSCRIPTION,

	TEX_TEST_PLAY_TEXT,

};

// 2D画像ロードデータ
LOAD_TEXTURE e_loadTexture[] = {
	{ TEX_WHITE,					"./DATA/Images/white.png" },
	{ TEX_TITLE,					"./DATA/Images/title_bg.png" },
	{ TEX_MAIN,						"./DATA/Images/default_bg.jpg"},
	{ TEX_PLAYER,					"./DATA/Images/character.png"},

	{ TEX_PAGE_LEFT,				"./DATA/Images/Book/page_left.png" },
	{ TEX_PAGE_RIGHT,				"./DATA/Images/Book/page_right.png" },
	{ TEX_COVER_FRONT,				"./DATA/Images/Book/cover_front.png" },
	{ TEX_COVER_BACK,				"./DATA/Images/Book/cover_back.png" },

	{ TEX_MAP_OBJECT,				"./DATA/Images/Map/map_object_full.png" },
	{ TEX_IVY_THICK,				"./DATA/Images/Map/border_thick.png" },
	{ TEX_IVY_THIN,					"./DATA/Images/Map/border_thin.png" },

	{ TEX_SMOKE,					"./DATA/Images/particle-smoke4.png" },
	{ TEX_LIFE_STAMP,				"./DATA/Images/UI/stamp.png"},
	{ TEX_LARGE_PLAYER,				"./DATA/Images/UI/large_player.png" },

	{ TEX_NUMBERS,					"./DATA/Images/UI/numbers.png" },
	
	{ TEX_PAUSE_PANEL,				"./DATA/Images/UI/pause_panel.png" },
	{ TEX_PAUSE_SELECTED,			"./DATA/Images/UI/pause_selected.png" },

	{ TEX_ANIME_STAMP,				"./DATA/Images/Effect/hanko_motion.png" },

	{ TEX_GAGE_DIVISION_ALLOCATION,	"./DATA/Images/UI/gage_division_allocation.png" },
	{ TEX_GAGE_DIVISION,			"./DATA/Images/UI/gage_division.png" },
	{ TEX_GAGE,						"./DATA/Images/UI/gage_ink_white.png" },
	{ TEX_PLAYER_FACE,				"./DATA/Images/UI/player_face.png" },

	{ TEX_EFF_DISAPPEAR,			"./DATA/Images/Effect/disappear.png" },
	{ TEX_EFF_JUMP,					"./DATA/Images/Effect/jump.png" },
	{ TEX_EFF_MAKE_TRANSCRIPTION,	"./DATA/Images/Effect/make_transcription.png" },

	{ TEX_TEST_PLAY_TEXT,			"./DATA/Images/UI/test_play_text.png" },

	{ -1, NULL },
};

// 背景
SPRITE_LEFTTOP	e_sprTitleBG = SPRITE_LEFTTOP(TEX_TITLE, 0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);
SPRITE_LEFTTOP	e_sprMainBG = SPRITE_LEFTTOP(TEX_MAIN, 0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);

// Book texture
SPRITE_LEFTTOP e_sprPageLeft = SPRITE_LEFTTOP(TEX_PAGE_LEFT, 0, 0, PAGE_WIDTH, PAGE_HEIGHT);
SPRITE_LEFTTOP e_sprPageRight = SPRITE_LEFTTOP(TEX_PAGE_RIGHT, 0, 0, PAGE_WIDTH, PAGE_HEIGHT);


SPRITE_LEFTTOP e_sprCoverFront = SPRITE_LEFTTOP(TEX_COVER_FRONT, 0, 0, PAGE_WIDTH + 0 + 20, PAGE_HEIGHT + 10 + 10);
SPRITE_LEFTTOP e_sprCoverBack = SPRITE_LEFTTOP(TEX_COVER_BACK, 0, 0, PAGE_WIDTH + 0 + 20, PAGE_HEIGHT + 10 + 10);

// キャラなど

SPRITE_BOTTOM e_pAnimePlayerStandby[] = {

	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 0, 95, 120, 55, 8),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 1, 95, 120, 55, 8),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 2, 95, 120, 55, 8),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 3, 95, 120, 55, 8),
	SPRITE_BOTTOM(-1, 0, 0, 0, 0),
};

SPRITE_BOTTOM e_pAnimePlayerYawn[] = {

	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 0, 177, 120, 73, 8),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 1, 177, 120, 73, 8),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 2, 177, 120, 73, 8),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 3, 177, 120, 73, 8),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 4, 177, 120, 73, 8),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 5, 177, 120, 73, 8),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 6, 177, 120, 73, 8),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 7, 177, 120, 73, 8),
	SPRITE_BOTTOM(-1, 0, 0, 0, 0),
};

SPRITE_BOTTOM e_pAnimePlayerRun[] = {

	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 0, 0, 120, 50, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 1, 0, 120, 50, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 2, 0, 120, 50, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 3, 0, 120, 50, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 4, 0, 120, 50, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 5, 0, 120, 50, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 6, 0, 120, 50, 5),
	SPRITE_BOTTOM(-1, 0, 0, 0, 0),
};

SPRITE_BOTTOM e_pAnimePlayerJump[] = {

	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 0, 285, 120, 65, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 1, 285, 120, 65, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 2, 285, 120, 65, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 3, 285, 120, 65, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 4, 285, 120, 65, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 5, 285, 120, 65, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 6, 285, 120, 65, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 7, 285, 120, 65, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 8, 285, 120, 65, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 9, 285, 120, 65, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 10, 285, 120, 65, 5),
	SPRITE_BOTTOM(-1, 0, 0, 0, 0),
};


// マップ関係、アイテム
SPRITE_LEFTTOP e_pSprItem[] =
{
	SPRITE_LEFTTOP(TEX_MAP_OBJECT,   0, 0, 147,  92),// ITEM_HOUSE
	SPRITE_LEFTTOP(TEX_MAP_OBJECT, 147, 0, 101, 122),// ITEM_TREE_A
	SPRITE_LEFTTOP(TEX_MAP_OBJECT, 248, 0,  99, 112),// M_TYPE::TREE_B
	SPRITE_LEFTTOP(TEX_MAP_OBJECT, 347, 0,  79,  47),// M_TYPE::IVY_BIG
	SPRITE_LEFTTOP(TEX_IVY_THIN,	 0, 0, 125,  22),// M_TYPE::IVY_THIN
	SPRITE_LEFTTOP(TEX_IVY_THICK,    0, 0, 125,  17),// M_TYPE::IVY_THICK
	SPRITE_LEFTTOP(TEX_IVY_THIN,	 0, 0, 125,  22),// M_TYPE::RECOVERY_UP
	SPRITE_LEFTTOP(TEX_IVY_THIN,	 0, 0, 125,  22),// M_TYPE::RECOVERY_DOWN
	SPRITE_LEFTTOP(TEX_MAP_OBJECT, 715, 0,  51,  76),// M_TYPE::DOOR
	SPRITE_LEFTTOP(TEX_MAP_OBJECT, 802, 0,  36,  28),// M_TYPE::KEY
	e_sprWhite,// M_TYPE::HIGH_CONCENTRATION

	SPRITE_LEFTTOP(-1, 0, 0, 0, 0),
};

SPRITE_LEFTTOP e_pAnimeRecoveryUp[] =
{
	SPRITE_LEFTTOP(TEX_IVY_THICK,    0, 0, 125,  17,0,0,15),
	SPRITE_LEFTTOP(TEX_IVY_THIN,	  0, 0, 125,  22,0,0,15),
	SPRITE_LEFTTOP(-1,0,0,0,0),
};

SPRITE_LEFTTOP e_pAnimeRecoveryDown[] =
{
	SPRITE_LEFTTOP(TEX_IVY_THICK,    0, 0, 125,  17,0,0,15),
	SPRITE_LEFTTOP(TEX_IVY_THIN,	  0, 0, 125,  22,0,0,15),
	SPRITE_LEFTTOP(-1,0,0,0,0),
};

// UI関係
SPRITE_LEFTTOP e_sprWhite = SPRITE_LEFTTOP(TEX_WHITE, 0, 0, 32, 32);
SPRITE_CENTER e_sprGageDivisionAllocation = SPRITE_CENTER(TEX_GAGE_DIVISION_ALLOCATION, 0, 0, 775, 222);
SPRITE_CENTER e_sprGageAllocation = SPRITE_CENTER(TEX_WHITE, 0, 0, 388, 222);

SPRITE_CENTER e_sprLargePlayer = SPRITE_CENTER(TEX_LARGE_PLAYER, 0, 0, 252, 231);

SPRITE_CENTER e_sprNumbers = SPRITE_CENTER(TEX_NUMBERS, 0, 0, 76, 118);

SPRITE_CENTER e_sprPausePanel = SPRITE_CENTER(TEX_PAUSE_PANEL, 0, 0, 670, 380);
SPRITE_CENTER e_sprPauseSelected = SPRITE_CENTER(TEX_PAUSE_SELECTED, 0, 0, 480, 68);

SPRITE_LEFTTOP e_sprTestPlayText = SPRITE_LEFTTOP(TEX_TEST_PLAY_TEXT, 0, 0, 231, 119);

SPRITE_CENTER e_pAnimeStamp[] =
{
	SPRITE_CENTER(TEX_ANIME_STAMP,122 * 0,0,122,138,20),
	SPRITE_CENTER(TEX_ANIME_STAMP,122 * 1,0,122,138,8),
	SPRITE_CENTER(TEX_ANIME_STAMP,122 * 2,0,122,138,8),
	SPRITE_CENTER(TEX_ANIME_STAMP,122 * 3,0,122,138,8),
	SPRITE_CENTER(TEX_ANIME_STAMP,122 * 4,0,122,138,8),
	SPRITE_CENTER(TEX_ANIME_STAMP,122 * 5,0,122,138,8),
	SPRITE_CENTER(TEX_ANIME_STAMP,122 * 6,0,122,138,8),
	SPRITE_CENTER(TEX_ANIME_STAMP,122 * 7,0,122,138,8),
	SPRITE_CENTER(TEX_ANIME_STAMP,122 * 8,0,122,138,8),
	SPRITE_CENTER(TEX_ANIME_STAMP,122 * 9,0,122,138,50),
	SPRITE_CENTER(-1, 0, 0, 0, 0),
};


SPRITE_LEFTTOP e_pSprPlayerFace[] = {
	SPRITE_LEFTTOP(TEX_PLAYER_FACE, 0  , 0, 90, 90),
	SPRITE_LEFTTOP(TEX_PLAYER_FACE, 90 , 0, 90, 90),
	SPRITE_LEFTTOP(TEX_PLAYER_FACE, 180, 0, 90, 90),
};

SPRITE_LEFTTOP e_sprGageDivision= SPRITE_LEFTTOP(TEX_GAGE_DIVISION, 0, 0, 456, 128);
SPRITE_LEFTTOP e_sprGage = SPRITE_LEFTTOP(TEX_WHITE, 0, 0, 34 * 10, 30);
SPRITE_LEFTTOP e_pAnimeGage[] = {
	SPRITE_LEFTTOP(TEX_GAGE,  0, 0, 10, 30, 0, 0, 10),
	SPRITE_LEFTTOP(TEX_GAGE, 10, 0, 10, 30, 0, 0, 10),
	SPRITE_LEFTTOP(TEX_GAGE, 20, 0, 10, 30, 0, 0, 10),
	SPRITE_LEFTTOP(TEX_GAGE, 30, 0, 10, 30, 0, 0, 10),
	SPRITE_LEFTTOP(TEX_GAGE, 40, 0, 10, 30, 0, 0, 10),
	SPRITE_LEFTTOP(-1, 0, 0, 0, 0),
};

SPRITE_LEFTTOP e_sprLifeStamp = SPRITE_LEFTTOP(TEX_LIFE_STAMP, 0, 0, 36, 28);

// Effect関係
SPRITE_CENTER e_sprHitObj = SPRITE_CENTER(TEX_SMOKE, 0, 0, 64, 64);

SPRITE_BOTTOM e_pAnimeEffDisappear[] = {
	SPRITE_BOTTOM(TEX_EFF_DISAPPEAR, 84*0, 0, 84, 75, 6),
	SPRITE_BOTTOM(TEX_EFF_DISAPPEAR, 84*1, 0, 84, 75, 6),
	SPRITE_BOTTOM(TEX_EFF_DISAPPEAR, 84*2, 0, 84, 75, 6),
	SPRITE_BOTTOM(TEX_EFF_DISAPPEAR, 84*3, 0, 84, 75, 6),
	SPRITE_BOTTOM(TEX_EFF_DISAPPEAR, 84*4, 0, 84, 75, 6),
	SPRITE_BOTTOM(-1, 0, 0, 0, 0),
};
SPRITE_BOTTOM e_pAnimeEffJump[] = {
	SPRITE_BOTTOM(TEX_EFF_JUMP, 112 * 0, 0, 112, 13, 6),
	SPRITE_BOTTOM(TEX_EFF_JUMP, 112 * 1, 0, 112, 13, 6),
	SPRITE_BOTTOM(TEX_EFF_JUMP, 112 * 2, 0, 112, 13, 6),
	SPRITE_BOTTOM(TEX_EFF_JUMP, 112 * 3, 0, 112, 13, 6),
	SPRITE_BOTTOM(-1, 0, 0, 0, 0),
};
SPRITE_BOTTOM e_pAnimeEffMakeTranscription[] = {
	SPRITE_BOTTOM(TEX_EFF_MAKE_TRANSCRIPTION, 81 * 0, 0, 81, 75, 6),
	SPRITE_BOTTOM(TEX_EFF_MAKE_TRANSCRIPTION, 81 * 1, 0, 81, 75, 6),
	SPRITE_BOTTOM(TEX_EFF_MAKE_TRANSCRIPTION, 81 * 2, 0, 81, 75, 6),
	SPRITE_BOTTOM(-1, 0, 0, 0, 0),
};

//******************************************************************************
