//******************************************************************************
//
//
//		2D画像データ
//
//
//******************************************************************************

// インクルード
#include "game.h"

#include "sprite_data.h"

// ラベル定義
enum TEX_NO {
	TEX_WHITE,
	TEX_MAIN,
	TEX_PLAYER,

	TEX_PAGE,
	TEX_COVER_FRONT,
	TEX_COVER_BACK,

	TEX_KEY,
	TEX_DOOR,
	TEX_BORDER_INNER,
	TEX_PASSABLE,
	TEX_RECOVERY,
	TEX_MAP_OBJ_FOREST,
	TEX_MAP_OBJ_BIRD,
	TEX_MAP_OBJ_GRAVE,
	TEX_MAP_OBJ_SNOW,
	TEX_MAP_OBJ_DESERT,
	TEX_TUTORIAL,

	TEX_SMOKE,
	TEX_LIFE_STAMP,
	TEX_LARGE_PLAYER,

	TEX_NUMBERS,

	TEX_PAUSE_PANEL,
	TEX_PAUSE_SELECTED,

	TEX_ANIME_STAMP,

	TEX_GAGE_DIVISION_ALLOCATION,
	TEX_GAGE_DIVISION,
	TEX_ANIME_GAGE,
	TEX_PLAYER_FACE,

	TEX_EFF_DISAPPEAR,
	TEX_EFF_JUMP_UP,
	TEX_EFF_JUMP_DOWN,
	TEX_EFF_MAKE_TRANSCRIPTION,
	TEX_EFF_RECOVERY_PASSED,

	TEX_GAME_RULE_LEFT,
	TEX_GAME_RULE_RIGHT,

	TEX_HELP,
	TEX_HELP_BUTTON,

	TEX_X_BUTTON,

	TEX_SCROLL_MODE,

	TEX_STAGE_CLEAR,
	TEX_GAME_CLEAR,
	TEX_GAME_OVER,

	TEX_STAGE_SELECT00_LEFT,
	TEX_STAGE_SELECT00_RIGHT,
	TEX_STAGE_SELECT01_LEFT,
	TEX_STAGE_SELECT01_RIGHT,

	TEX_STAGE_SELECTED,

};

// 2D画像ロードデータ
LOAD_TEXTURE e_loadTexture[] = {
	{ TEX_WHITE,					"./DATA/Images/white.png" },
	{ TEX_MAIN,						"./DATA/Images/main_bg.png"},
	{ TEX_PLAYER,					"./DATA/Images/player.png"},

	{ TEX_PAGE,						"./DATA/Images/Book/page.png" },
	{ TEX_COVER_FRONT,				"./DATA/Images/Book/cover_front.png" },
	{ TEX_COVER_BACK,				"./DATA/Images/Book/cover_back.png" },

	{ TEX_KEY,						"./DATA/Images/Map/key.png" },
	{ TEX_DOOR,						"./DATA/Images/Map/door.png" },
	{ TEX_BORDER_INNER,				"./DATA/Images/Map/border_inner.png" },
	{ TEX_PASSABLE,					"./DATA/Images/Map/passable.png" },
	{ TEX_RECOVERY,					"./DATA/Images/Map/recovery.png" },
	{ TEX_MAP_OBJ_FOREST,			"./DATA/Images/Map/map_obj_1.png" },
	{ TEX_MAP_OBJ_BIRD,				"./DATA/Images/Map/map_obj_2.png" },
	{ TEX_MAP_OBJ_GRAVE,			"./DATA/Images/Map/map_obj_3.png" },
	{ TEX_MAP_OBJ_SNOW,				"./DATA/Images/Map/map_obj_4.png" },
	{ TEX_MAP_OBJ_DESERT,			"./DATA/Images/Map/map_obj_5.png" },
	{ TEX_TUTORIAL,					"./DATA/Images/Map/moji.png"},

	{ TEX_SMOKE,					"./DATA/Images/particle-smoke4.png" },
	{ TEX_LIFE_STAMP,				"./DATA/Images/UI/stamp.png"},
	{ TEX_LARGE_PLAYER,				"./DATA/Images/UI/large_player.png" },

	{ TEX_NUMBERS,					"./DATA/Images/UI/numbers.png" },
	
	{ TEX_PAUSE_PANEL,				"./DATA/Images/UI/pause_panel.png" },
	{ TEX_PAUSE_SELECTED,			"./DATA/Images/UI/pause_selected.png" },

	{ TEX_ANIME_STAMP,				"./DATA/Images/Effect/stamp_pressing.png" },

	{ TEX_GAGE_DIVISION_ALLOCATION,	"./DATA/Images/UI/gage_division_allocation.png" },
	{ TEX_GAGE_DIVISION,			"./DATA/Images/UI/gage_division.png" },
	{ TEX_ANIME_GAGE,				"./DATA/Images/UI/gage_ink_white.png" },
	{ TEX_PLAYER_FACE,				"./DATA/Images/UI/player_face.png" },

	{ TEX_EFF_DISAPPEAR,			"./DATA/Images/Effect/disappear.png" },
	{ TEX_EFF_JUMP_UP,				"./DATA/Images/Effect/jump_up.png" },
	{ TEX_EFF_JUMP_DOWN,			"./DATA/Images/Effect/jump_down.png" },
	{ TEX_EFF_MAKE_TRANSCRIPTION,	"./DATA/Images/Effect/make_transcription.png" },
	{ TEX_EFF_RECOVERY_PASSED,		"./DATA/Images/Effect/recovery_passed.png" },

	{ TEX_GAME_RULE_LEFT,			"./DATA/Images/Book/game_rule_left.png" },
	{ TEX_GAME_RULE_RIGHT,			"./DATA/Images/Book/game_rule_right.png" },

	{ TEX_HELP,						"./DATA/Images/UI/help.png" },
	{ TEX_HELP_BUTTON,				"./DATA/Images/UI/help_button.png" },

	{ TEX_X_BUTTON,					"./DATA/Images/UI/x_button.png" },
	
	{ TEX_SCROLL_MODE,				"./DATA/Images/UI/scroll_mode.png" },

	{ TEX_STAGE_CLEAR,				"./DATA/Images/UI/stage_clear.png" },
	{ TEX_GAME_CLEAR,				"./DATA/Images/UI/game_clear.png" },
	{ TEX_GAME_OVER,				"./DATA/Images/UI/game_over.png" },

	{ TEX_STAGE_SELECT00_LEFT,			"./DATA/Images/UI/stage_select00_left.png" },
	{ TEX_STAGE_SELECT00_RIGHT,			"./DATA/Images/UI/stage_select00_right.png" },
	{ TEX_STAGE_SELECT01_LEFT,			"./DATA/Images/UI/stage_select01_left.png" },
	{ TEX_STAGE_SELECT01_RIGHT,			"./DATA/Images/UI/stage_select01_right.png" },

	{ TEX_STAGE_SELECTED,			"./DATA/Images/UI/stage_selected.png" },



	{ -1, NULL },
};

// 背景
SPRITE_LEFTTOP	e_sprMainBG = SPRITE_LEFTTOP(TEX_MAIN, 0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);

// Book texture
SPRITE_LEFTTOP e_sprPage = SPRITE_LEFTTOP(TEX_PAGE, 0, 0, PAGE_WIDTH, PAGE_HEIGHT);


SPRITE_LEFTTOP e_sprCoverFront = SPRITE_LEFTTOP(TEX_COVER_FRONT, 0, 0, PAGE_WIDTH + 0 + 20, PAGE_HEIGHT + 10 + 10);
SPRITE_LEFTTOP e_sprCoverBack = SPRITE_LEFTTOP(TEX_COVER_BACK, 0, 0, PAGE_WIDTH + 0 + 20, PAGE_HEIGHT + 10 + 10);

// キャラなど

//SPRITE_BOTTOM e_pAnimePlayerStandby[] = {
//
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 0, 95, 120, 55, 8),
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 1, 95, 120, 55, 8),
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 2, 95, 120, 55, 8),
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 3, 95, 120, 55, 8),
//	SPRITE_BOTTOM(-1, 0, 0, 0, 0),
//};

SPRITE_BOTTOM e_pAnimePlayerStandby[] = {

	SPRITE_BOTTOM(TEX_PLAYER, 0 + 67 * 0, 0, 67, 55, 8),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 67 * 1, 0, 67, 55, 8),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 67 * 2, 0, 67, 55, 8),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 67 * 3, 0, 67, 55, 8),
	SPRITE_BOTTOM(-1, 0, 0, 0, 0),
};

//SPRITE_BOTTOM e_pAnimePlayerYawn[] = {
//
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 0, 177, 120, 73, 8),
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 1, 177, 120, 73, 8),
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 2, 177, 120, 73, 8),
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 3, 177, 120, 73, 8),
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 4, 177, 120, 73, 8),
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 5, 177, 120, 73, 8),
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 6, 177, 120, 73, 8),
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 7, 177, 120, 73, 8),
//	SPRITE_BOTTOM(-1, 0, 0, 0, 0),
//};

SPRITE_BOTTOM e_pAnimePlayerYawn[] = {

	SPRITE_BOTTOM(TEX_PLAYER, 0 + 60 * 0, 85, 60, 73, 8),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 60 * 1, 85, 60, 73, 8),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 60 * 2, 85, 60, 73, 8),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 60 * 3, 85, 60, 73, 8),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 60 * 4, 85, 60, 73, 8),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 60 * 5, 85, 60, 73, 8),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 60 * 6, 85, 60, 73, 8),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 60 * 7, 85, 60, 73, 8),
	SPRITE_BOTTOM(-1, 0, 0, 0, 0),
};

//SPRITE_BOTTOM e_pAnimePlayerRun[] = {
//
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 0, 0, 120, 50, 5),
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 1, 0, 120, 50, 5),
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 2, 0, 120, 50, 5),
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 3, 0, 120, 50, 5),
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 4, 0, 120, 50, 5),
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 5, 0, 120, 50, 5),
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 6, 0, 120, 50, 5),
//	SPRITE_BOTTOM(-1, 0, 0, 0, 0),
//};

SPRITE_BOTTOM e_pAnimePlayerRun[] = {

	SPRITE_BOTTOM(TEX_PLAYER, 0 + 96 * 0, 200, 96, 46, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 96 * 1, 200, 96, 46, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 96 * 2, 200, 96, 46, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 96 * 3, 200, 96, 46, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 96 * 4, 200, 96, 46, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 96 * 5, 200, 96, 46, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 96 * 6, 200, 96, 46, 5),
	SPRITE_BOTTOM(-1, 0, 0, 0, 0),
};

//SPRITE_BOTTOM e_pAnimePlayerJump[] = {
//
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 0, 285, 120, 65, 5),
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 1, 285, 120, 65, 5),
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 2, 285, 120, 65, 5),
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 3, 285, 120, 65, 5),
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 4, 285, 120, 65, 5),
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 5, 285, 120, 65, 5),
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 6, 285, 120, 65, 5),
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 7, 285, 120, 65, 5),
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 8, 285, 120, 65, 5),
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 9, 285, 120, 65, 5),
//	SPRITE_BOTTOM(TEX_PLAYER, 0 + 120 * 10, 285, 120, 65, 5),
//	SPRITE_BOTTOM(-1, 0, 0, 0, 0),
//};
SPRITE_BOTTOM e_pAnimePlayerJumpUp[] = {

	SPRITE_BOTTOM(TEX_PLAYER, 0 + 84 * 0, 280, 84, 57, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 84 * 1, 280, 84, 57, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 84 * 2, 280, 84, 57, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 84 * 3, 280, 84, 57, 5),
	SPRITE_BOTTOM(-1, 0, 0, 0, 0),
};

SPRITE_BOTTOM e_pAnimePlayerJump[] = {

	SPRITE_BOTTOM(TEX_PLAYER, 0 + 84 * 0, 370, 84, 60, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 84 * 1, 370, 84, 60, 5),
	SPRITE_BOTTOM(-1, 0, 0, 0, 0),
};

SPRITE_BOTTOM e_pAnimePlayerJumpDown[] = {

	SPRITE_BOTTOM(TEX_PLAYER, 0 + 84 * 0, 470, 84, 57, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 84 * 1, 470, 84, 57, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 84 * 2, 470, 84, 57, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 84 * 3, 470, 84, 57, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 84 * 4, 470, 84, 57, 5),
	SPRITE_BOTTOM(TEX_PLAYER, 0 + 84 * 5, 470, 84, 57, 5),
	SPRITE_BOTTOM(-1, 0, 0, 0, 0),
};


// マップ関係、アイテム

SPRITE_LEFTTOP e_pAnimeRecovery[] =
{
	SPRITE_LEFTTOP(TEX_PASSABLE,    0, 0, 130,  17,0,0,10),
	SPRITE_LEFTTOP(TEX_PASSABLE,    130, 0, 130,  17,0,0,10),
	SPRITE_LEFTTOP(TEX_PASSABLE,    130 * 2, 0, 130,  17,0,0,10),
	SPRITE_LEFTTOP(TEX_PASSABLE,    130 * 3, 0, 130,  17,0,0,10),
	SPRITE_LEFTTOP(-1,0,0,0,0),
};


SPRITE_LEFTTOP e_sprDoor = SPRITE_LEFTTOP(TEX_DOOR, 0, 0, 70, 76);// M_TYPE::DOOR
SPRITE_LEFTTOP e_sprKey = SPRITE_LEFTTOP(TEX_KEY, 0, 0, 70, 58);// M_TYPE::KEY


SPRITE_LEFTTOP e_pSprItem[] =
{
	SPRITE_LEFTTOP(TEX_BORDER_INNER, 0, 0, 125, 17),	// M_TYPE::BORDER_INNER
	e_pAnimeRecovery[0],								// M_TYPE::PASSABLE_UP
	e_pAnimeRecovery[0],								// M_TYPE::PASSABLE_DOWN
	SPRITE_LEFTTOP(TEX_RECOVERY,	 0, 0,	64, 64),	// M_TYPE::RECOVERY
	e_sprDoor,											// M_TYPE::DOOR
	e_sprKey,											// M_TYPE::KEY
	e_sprWhite,// M_TYPE::HIGH_CONCENTRATION
	SPRITE_LEFTTOP(TEX_GAME_RULE_LEFT, 0, 0,  PAGE_WIDTH,  PAGE_HEIGHT),// M_TYPE::GAME_RULE_LEFT
	SPRITE_LEFTTOP(TEX_GAME_RULE_RIGHT, 0, 0,  PAGE_WIDTH,  PAGE_HEIGHT),// M_TYPE::GAME_RULE_RIGHT

	SPRITE_LEFTTOP(TEX_STAGE_SELECT00_LEFT, 0, 0, PAGE_WIDTH, PAGE_HEIGHT),		// M_TYPE::STAGE_SELECT00_LEFT
	SPRITE_LEFTTOP(TEX_STAGE_SELECT00_RIGHT, 0, 0, PAGE_WIDTH, PAGE_HEIGHT),	// M_TYPE::STAGE_SELECT00_RIGHT
	SPRITE_LEFTTOP(TEX_STAGE_SELECT01_LEFT, 0, 0, PAGE_WIDTH, PAGE_HEIGHT),		// M_TYPE::STAGE_SELECT01_LEFT
	SPRITE_LEFTTOP(TEX_STAGE_SELECT01_RIGHT, 0, 0, PAGE_WIDTH, PAGE_HEIGHT),	// M_TYPE::STAGE_SELECT01_RIGHT

	SPRITE_LEFTTOP(TEX_MAP_OBJ_FOREST, 0, 143 * 0, 83, 36),		// M_TYPE::FOREST_1
	SPRITE_LEFTTOP(TEX_MAP_OBJ_FOREST, 0, 143 * 1, 57, 43),		// M_TYPE::FOREST_2
	SPRITE_LEFTTOP(TEX_MAP_OBJ_FOREST, 0, 143 * 2, 119, 56),	// M_TYPE::FOREST_3
	SPRITE_LEFTTOP(TEX_MAP_OBJ_FOREST, 0, 143 * 3, 169, 25),	// M_TYPE::FOREST_4
	SPRITE_LEFTTOP(TEX_MAP_OBJ_FOREST, 0, 143 * 4, 168, 26),	// M_TYPE::FOREST_5
	SPRITE_LEFTTOP(TEX_MAP_OBJ_FOREST, 0, 143 * 5, 89, 143),	// M_TYPE::FOREST_6
	SPRITE_LEFTTOP(TEX_MAP_OBJ_FOREST, 0, 143 * 6, 91, 138),	// M_TYPE::FOREST_7
	SPRITE_LEFTTOP(TEX_MAP_OBJ_FOREST, 0, 143 * 7, 115, 128),	// M_TYPE::FOREST_8
	SPRITE_LEFTTOP(TEX_MAP_OBJ_FOREST, 0, 143 * 8, 33, 107),	// M_TYPE::FOREST_9
	SPRITE_LEFTTOP(TEX_MAP_OBJ_FOREST, 0, 143 * 9, 44, 113),	// M_TYPE::FOREST_10
	SPRITE_LEFTTOP(TEX_MAP_OBJ_FOREST, 0, 143 * 10, 146, 110),	// M_TYPE::FOREST_11

	SPRITE_LEFTTOP(TEX_MAP_OBJ_BIRD, 0, 165 * 0, 182, 146),		// M_TYPE::BIRD_1
	SPRITE_LEFTTOP(TEX_MAP_OBJ_BIRD, 0, 165 * 1, 138, 137),		// M_TYPE::BIRD_2
	SPRITE_LEFTTOP(TEX_MAP_OBJ_BIRD, 0, 165 * 2, 190, 91),		// M_TYPE::BIRD_3
	SPRITE_LEFTTOP(TEX_MAP_OBJ_BIRD, 0, 165 * 3, 58, 85),		// M_TYPE::BIRD_4
	SPRITE_LEFTTOP(TEX_MAP_OBJ_BIRD, 0, 165 * 4, 57, 85),		// M_TYPE::BIRD_5
	SPRITE_LEFTTOP(TEX_MAP_OBJ_BIRD, 0, 165 * 5, 182, 111),		// M_TYPE::BIRD_6
	SPRITE_LEFTTOP(TEX_MAP_OBJ_BIRD, 0, 165 * 6, 158, 165),		// M_TYPE::BIRD_7
	SPRITE_LEFTTOP(TEX_MAP_OBJ_BIRD, 0, 165 * 7, 192, 148),		// M_TYPE::BIRD_8

	SPRITE_LEFTTOP(TEX_MAP_OBJ_GRAVE, 0, 153 * 0, 82, 54),		// M_TYPE::GRAVE_1
	SPRITE_LEFTTOP(TEX_MAP_OBJ_GRAVE, 0, 153 * 1, 68, 74),		// M_TYPE::GRAVE_2
	SPRITE_LEFTTOP(TEX_MAP_OBJ_GRAVE, 0, 153 * 2, 122, 100),	// M_TYPE::GRAVE_3
	SPRITE_LEFTTOP(TEX_MAP_OBJ_GRAVE, 0, 153 * 3, 50, 89),		// M_TYPE::GRAVE_4
	SPRITE_LEFTTOP(TEX_MAP_OBJ_GRAVE, 0, 153 * 4, 74, 95),		// M_TYPE::GRAVE_5
	SPRITE_LEFTTOP(TEX_MAP_OBJ_GRAVE, 0, 153 * 5, 66, 102),		// M_TYPE::GRAVE_6
	SPRITE_LEFTTOP(TEX_MAP_OBJ_GRAVE, 0, 153 * 6, 80, 121),		// M_TYPE::GRAVE_7
	SPRITE_LEFTTOP(TEX_MAP_OBJ_GRAVE, 0, 153 * 7, 80, 146),		// M_TYPE::GRAVE_8
	SPRITE_LEFTTOP(TEX_MAP_OBJ_GRAVE, 0, 153 * 8, 56, 77),		// M_TYPE::GRAVE_9
	SPRITE_LEFTTOP(TEX_MAP_OBJ_GRAVE, 0, 153 * 9, 76, 84),		// M_TYPE::GRAVE_10
	SPRITE_LEFTTOP(TEX_MAP_OBJ_GRAVE, 0, 153 * 10, 261, 153),	// M_TYPE::GRAVE_11

	SPRITE_LEFTTOP(TEX_MAP_OBJ_SNOW, 0, 141 * 0, 87, 82),		// M_TYPE::SNOW_1
	SPRITE_LEFTTOP(TEX_MAP_OBJ_SNOW, 0, 141 * 1, 187, 103),		// M_TYPE::SNOW_2
	SPRITE_LEFTTOP(TEX_MAP_OBJ_SNOW, 0, 141 * 2, 146, 71),		// M_TYPE::SNOW_3
	SPRITE_LEFTTOP(TEX_MAP_OBJ_SNOW, 0, 141 * 3, 73, 83),		// M_TYPE::SNOW_4
	SPRITE_LEFTTOP(TEX_MAP_OBJ_SNOW, 0, 141 * 4, 80, 82),		// M_TYPE::SNOW_5
	SPRITE_LEFTTOP(TEX_MAP_OBJ_SNOW, 0, 141 * 5, 45, 52),		// M_TYPE::SNOW_6
	SPRITE_LEFTTOP(TEX_MAP_OBJ_SNOW, 0, 141 * 6, 39, 38),		// M_TYPE::SNOW_7
	SPRITE_LEFTTOP(TEX_MAP_OBJ_SNOW, 0, 141 * 7, 119, 141),		// M_TYPE::SNOW_8

	SPRITE_LEFTTOP(TEX_MAP_OBJ_DESERT, 0, 131 * 0, 163, 115),	// M_TYPE::DESERT_1
	SPRITE_LEFTTOP(TEX_MAP_OBJ_DESERT, 0, 131 * 1, 178, 32),	// M_TYPE::DESERT_2
	SPRITE_LEFTTOP(TEX_MAP_OBJ_DESERT, 0, 131 * 2, 69, 90),		// M_TYPE::DESERT_3
	SPRITE_LEFTTOP(TEX_MAP_OBJ_DESERT, 0, 131 * 3, 59, 49),		// M_TYPE::DESERT_4
	SPRITE_LEFTTOP(TEX_MAP_OBJ_DESERT, 0, 131 * 4, 154, 131),	// M_TYPE::DESERT_5
	SPRITE_LEFTTOP(TEX_MAP_OBJ_DESERT, 0, 131 * 5, 132, 47),	// M_TYPE::DESERT_6
	SPRITE_LEFTTOP(TEX_MAP_OBJ_DESERT, 0, 131 * 6, 146, 29),	// M_TYPE::DESERT_7
	SPRITE_LEFTTOP(TEX_MAP_OBJ_DESERT, 0, 131 * 7, 185, 93),	// M_TYPE::DESERT_8

	SPRITE_LEFTTOP(TEX_TUTORIAL, 0, 0, 102, 26),	// M_TYPE::TUTORIAL_1
	SPRITE_LEFTTOP(TEX_TUTORIAL, 0, 26, 157, 26),	// M_TYPE::TUTORIAL_2
	SPRITE_LEFTTOP(TEX_TUTORIAL, 0, 52, 309, 54),	// M_TYPE::TUTORIAL_3
	SPRITE_LEFTTOP(TEX_TUTORIAL, 0, 106, 239, 55),	// M_TYPE::TUTORIAL_4


	SPRITE_LEFTTOP(-1, 0, 0, 0, 0),
};

// UI関係
SPRITE_LEFTTOP e_sprLifeStamp = SPRITE_LEFTTOP(TEX_LIFE_STAMP, 0, 0, 40, 32);

SPRITE_LEFTTOP e_sprWhite = SPRITE_LEFTTOP(TEX_WHITE, 0, 0, 32, 32);
SPRITE_CENTER e_sprGageDivisionAllocation = SPRITE_CENTER(TEX_GAGE_DIVISION_ALLOCATION, 0, 0, 362, 50);
SPRITE_CENTER sprGageAllocationUnder = SPRITE_CENTER(TEX_WHITE, 0, 0, 34 * 10, 30);
SPRITE_CENTER e_sprGageAllocation = SPRITE_CENTER(TEX_WHITE, 0, 0, 34 * 10, 30);


SPRITE_LEFTTOP e_sprGageDivision = SPRITE_LEFTTOP(TEX_GAGE_DIVISION, 0, 0, 456, 128);
SPRITE_LEFTTOP e_sprGage = SPRITE_LEFTTOP(TEX_WHITE, 0, 0, 34 * 10 - 5, 30);
SPRITE_LEFTTOP e_sprGageUnder = SPRITE_LEFTTOP(TEX_WHITE, 0, 0, 34 * 10, 30);
SPRITE_LEFTTOP e_pAnimeGage[] = {
	SPRITE_LEFTTOP(TEX_ANIME_GAGE,  0, 0, 10, 30, 0, 0, 10),
	SPRITE_LEFTTOP(TEX_ANIME_GAGE, 10, 0, 10, 30, 0, 0, 10),
	SPRITE_LEFTTOP(TEX_ANIME_GAGE, 20, 0, 10, 30, 0, 0, 10),
	SPRITE_LEFTTOP(TEX_ANIME_GAGE, 30, 0, 10, 30, 0, 0, 10),
	SPRITE_LEFTTOP(TEX_ANIME_GAGE, 40, 0, 10, 30, 0, 0, 10),
	SPRITE_LEFTTOP(-1, 0, 0, 0, 0),
};

SPRITE_CENTER e_sprLargePlayer = SPRITE_CENTER(TEX_LARGE_PLAYER, 0, 0, 252, 231);

SPRITE_LEFTTOP e_pSprPlayerFace[] = {
	SPRITE_LEFTTOP(TEX_PLAYER_FACE, 0  , 0, 90, 90),
	SPRITE_LEFTTOP(TEX_PLAYER_FACE, 90 , 0, 90, 90),
	SPRITE_LEFTTOP(TEX_PLAYER_FACE, 180, 0, 90, 90),
};

SPRITE_CENTER e_sprNumbers = SPRITE_CENTER(TEX_NUMBERS, 0, 0, 76, 118);

SPRITE_CENTER e_sprPausePanel = SPRITE_CENTER(TEX_PAUSE_PANEL, 0, 0, 670, 380);
SPRITE_CENTER e_sprPauseSelected = SPRITE_CENTER(TEX_PAUSE_SELECTED, 0, 0, 75, 77);

SPRITE_CENTER e_sprStageClear = SPRITE_CENTER(TEX_STAGE_CLEAR, 0, 0, 932, 360);
SPRITE_CENTER e_sprGameClear = SPRITE_CENTER(TEX_GAME_CLEAR, 0, 0, 932, 360);
SPRITE_CENTER e_sprGameOver = SPRITE_CENTER(TEX_GAME_OVER, 0, 0, 932, 360);
SPRITE_CENTER e_sprXButton = SPRITE_CENTER(TEX_X_BUTTON, 0, 0, 48, 48);

SPRITE_CENTER e_sprHelp = SPRITE_CENTER(TEX_HELP, 0, 0, 800, 600);
//SPRITE_LEFTTOP e_sprHelpButton = SPRITE_LEFTTOP(TEX_HELP_BUTTON, 0, 0, 150, 50);
SPRITE_LEFTTOP e_sprHelpButton = SPRITE_LEFTTOP(TEX_HELP_BUTTON, 0, 0, 132, 54);
SPRITE_LEFTTOP e_sprScrollMode = SPRITE_LEFTTOP(TEX_SCROLL_MODE, 0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);

SPRITE_LEFTTOP e_pSprStageSelection[] = {
	SPRITE_LEFTTOP(TEX_STAGE_SELECT00_LEFT, 0, 0, PAGE_WIDTH, PAGE_HEIGHT),
	SPRITE_LEFTTOP(TEX_STAGE_SELECT00_RIGHT, 0, 0, PAGE_WIDTH, PAGE_HEIGHT),
	SPRITE_LEFTTOP(TEX_STAGE_SELECT01_LEFT, 0, 0, PAGE_WIDTH, PAGE_HEIGHT),
	SPRITE_LEFTTOP(TEX_STAGE_SELECT01_RIGHT, 0, 0, PAGE_WIDTH, PAGE_HEIGHT),
	SPRITE_LEFTTOP(-1, 0, 0, 0, 0),
};

SPRITE_CENTER e_sprStageSelected = SPRITE_CENTER(TEX_STAGE_SELECTED, 0, 0, 140, 35);

// Effect関係
SPRITE_CENTER e_sprHitObj = SPRITE_CENTER(TEX_SMOKE, 0, 0, 64, 64);

SPRITE_CENTER e_pAnimeStamp[] =
{
	SPRITE_CENTER(TEX_ANIME_STAMP,111 * 0,0,111,126,20),
	SPRITE_CENTER(TEX_ANIME_STAMP,111 * 1,0,111,126,8),
	SPRITE_CENTER(TEX_ANIME_STAMP,111 * 2,0,111,126,8),
	SPRITE_CENTER(TEX_ANIME_STAMP,111 * 3,0,111,126,8),
	SPRITE_CENTER(TEX_ANIME_STAMP,111 * 4,0,111,126,8),
	SPRITE_CENTER(TEX_ANIME_STAMP,111 * 5,0,111,126,8),
	SPRITE_CENTER(TEX_ANIME_STAMP,111 * 6,0,111,126,50),
	SPRITE_CENTER(-1, 0, 0, 0, 0),
};

SPRITE_BOTTOM e_pAnimeEffJumpUp[] = {
	SPRITE_BOTTOM(TEX_EFF_JUMP_UP, 112 * 0, 0, 112, 13, 6),
	SPRITE_BOTTOM(TEX_EFF_JUMP_UP, 112 * 1, 0, 112, 13, 6),
	SPRITE_BOTTOM(TEX_EFF_JUMP_UP, 112 * 2, 0, 112, 13, 6),
	SPRITE_BOTTOM(TEX_EFF_JUMP_UP, 112 * 3, 0, 112, 13, 6),
	SPRITE_BOTTOM(-1, 0, 0, 0, 0)
};
SPRITE_BOTTOM e_pAnimeEffJumpDown[] = {
	SPRITE_BOTTOM(TEX_EFF_JUMP_DOWN, 143 * 0, 0, 143, 23, 6),
	SPRITE_BOTTOM(TEX_EFF_JUMP_DOWN, 143 * 1, 0, 143, 23, 6),
	SPRITE_BOTTOM(TEX_EFF_JUMP_DOWN, 143 * 2, 0, 143, 23, 6),
	SPRITE_BOTTOM(TEX_EFF_JUMP_DOWN, 143 * 3, 0, 143, 23, 6),
	SPRITE_BOTTOM(-1, 0, 0, 0, 0),
};
SPRITE_BOTTOM e_pAnimeEffRecoveryPassed[] = {
	SPRITE_BOTTOM(TEX_EFF_RECOVERY_PASSED, 59 * 0, 0, 59, 69, 6),
	SPRITE_BOTTOM(TEX_EFF_RECOVERY_PASSED, 59 * 1, 0, 59, 69, 6),
	SPRITE_BOTTOM(TEX_EFF_RECOVERY_PASSED, 59 * 2, 0, 59, 69, 6),
	SPRITE_BOTTOM(TEX_EFF_RECOVERY_PASSED, 59 * 3, 0, 59, 69, 6),
	SPRITE_BOTTOM(-1, 0, 0, 0, 0),
};

SPRITE_CENTER e_pAnimeEffDisappear[] = {
	SPRITE_CENTER(TEX_EFF_DISAPPEAR, 84 * 0, 0, 84, 75, 6),
	SPRITE_CENTER(TEX_EFF_DISAPPEAR, 84 * 1, 0, 84, 75, 6),
	SPRITE_CENTER(TEX_EFF_DISAPPEAR, 84 * 2, 0, 84, 75, 6),
	SPRITE_CENTER(TEX_EFF_DISAPPEAR, 84 * 3, 0, 84, 75, 6),
	SPRITE_CENTER(-1, 0, 0, 0, 0),
};

SPRITE_CENTER e_pAnimeEffMakeTranscription[] = {
	SPRITE_CENTER(TEX_EFF_MAKE_TRANSCRIPTION, 81 * 0, 0, 81, 75, 6),
	SPRITE_CENTER(TEX_EFF_MAKE_TRANSCRIPTION, 81 * 1, 0, 81, 75, 6),
	SPRITE_CENTER(TEX_EFF_MAKE_TRANSCRIPTION, 81 * 2, 0, 81, 75, 6),
	SPRITE_CENTER(-1, 0, 0, 0, 0),
};

//******************************************************************************
